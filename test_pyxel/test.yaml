# ########################################################### #
# Pyxel detector simulation framework                         #
#                                                             #
# MARVEL CCD setup for PyEchelle simulations                  #
#                                                             #
# ########################################################### #

#--------------------------------------------------------------
exposure:
#--------------------------------------------------------------
  outputs:
    output_folder: "output"
    save_data_to_file:
      - detector.image.array: ['fits']

#--------------------------------------------------------------
ccd_detector:
#--------------------------------------------------------------
# NOTE the following value are from the STA-1600 CCD model, and
# if not then otherwise stated below. Two read modes exist:
# Fast readout: 65.8 muV/DN -> 15198 DN/V -> 9.4 e/DN
# Slow readout: 21.9 muV/DN -> 45662 DN/V -> 3.0 e/DN

  geometry:

    row: 5000 #10560              # [pixel]
    col: 5000 #10560              # [pixel]
    total_thickness: 40.    # [um] -> pyxel default
    pixel_vert_size: 9.     # [um]
    pixel_horz_size: 9.     # [um]

  material:
    material: 'silicon'

  environment:
    temperature: 200        # [K]

  characteristics:
    qe:   0.9               # QE approximation
    sv:   7.0e-6            # [V/e] Charge readout sensitivity
    amp:  1                 # [V/V] Gain of ouput amplifier
    a1:   1                 # [V/V] Gain of signal processor -> pyxel default TODO
    a2:   65536             # [DN/V] Gain of analog-to-digtital converter (16 bit)
    fwc:  800000            # [e] Full-well capacity TODO
    fwc_serial: 800000      # [e] Full-well capacity (serial register) TODO
    vg:   1.62e-10          # [cm^2] Half-pixel volumen charge can occupy -> pyxel default TODO
    svg:  1.62e-10          # [cm^2] Half-pixel volumen charge can occupy -> pyxel default TODO
    t:    1.10e-4           # [s] Parallel transfer time -> PLATO CCDs
    st:   3.40e-4           # [s] Serial transfer time -> PLATO CCDs

#--------------------------------------------------------------
pipeline:
#--------------------------------------------------------------

  # photon -> charge
  charge_generation:

    # Load in PyEchelle image
    - name: load_charge
      func: pyxel.models.charge_generation.load_charge
      enabled: true
      arguments:
        filename: filename.fits  # NOTE will be overwritten
        position: [0,0]
        align: "center"
        time_scale: 1            # NOTE will be overwritten

    - name: dark_current
      func: pyxel.models.charge_generation.dark_current
      enabled: true
      arguments:
        dark_rate: 0.1   # [e/pix/s] TODO this should be provided by manufacturer
        gain: 9.4        # [e/ADU] TODO make low and high readout mode as arg parse 

    # Cosmics from TARS model
    - name: tars
      func: pyxel.models.charge_generation.run_tars
      enabled: false             # NOTE will be activated except for bias'
      arguments: # TODO configure!
        simulation_mode: cosmic_ray
        running_mode: stepsize
        particle_type: proton
        initial_energy: 50        # [MeV]
        particle_number: 1        # TODO probably >1000 for a (10x10)k CCD. Should follow a Poisson distribution so every new exposure get assigned differnt values
        incident_angles:
        starting_position:
        spectrum_file: 'data/proton_L2_solarMax_11mm_Shielding.txt'  # NOTE probably good to use WC (solar max) scenario for input to pipeline
        seed: 4321

  # charge -> pixel
  charge_collection:

    # NOTE this simple module is always needed!
    - name: simple_collection
      func: pyxel.models.charge_collection.simple_collection
      enabled: true

    - name: full_well
      func: pyxel.models.charge_collection.simple_full_well
      enabled: true

    - name: simple_persistence
      func: pyxel.models.charge_collection.simple_persistence
      enabled: false
      arguments: # TODO configure!
        trap_timeconstants: [1., 10.]    # Two traps
        trap_densities: [0.307, 0.175]

  # pixel -> pixel
  charge_transfer:

    - name: cdm 
      func: pyxel.models.charge_transfer.cdm
      enabled: false # NOTE The CTI effect is too prominent with the current parameters 
      arguments: # TODO configure!
        parallel_cti: true
        serial_cti: false
        charge_injection: false
        beta_p: 0.37
        tr_p: [3.e-2]
        nt_p: [20.]
        sigma_p: [1.e-10]
        beta_s: 0.
        tr_s: []
        nt_s: []
        sigma_s: []

  # pixel -> signal
  charge_measurement:

    - name: simple_measurement
      func: pyxel.models.charge_measurement.simple_measurement
      enabled: true

  # signal -> image
  readout_electronics:

    - name: simple_amplifier
      func: pyxel.models.readout_electronics.simple_amplifier
      enabled: true

    - name: simple_digitization
      func: pyxel.models.readout_electronics.simple_digitization
      enabled: true
